// <auto-generated />
using System;
using HumanCapitalManagementApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumanCapitalManagementApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250720101925_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HumanCapitalManagementApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            IsActive = false,
                            Name = "Software Developer"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            IsActive = false,
                            Name = "System Administrator"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            IsActive = false,
                            Name = "Network Engineer"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            IsActive = false,
                            Name = "HR Specialist"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            IsActive = false,
                            Name = "HR Manager"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 2,
                            IsActive = false,
                            Name = "Talent Acquisition Coordinator"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 3,
                            IsActive = false,
                            Name = "Sales Executive"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            IsActive = false,
                            Name = "Sales Manager"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 3,
                            IsActive = false,
                            Name = "Account Executive"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 4,
                            IsActive = false,
                            Name = "Office Manager"
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 4,
                            IsActive = false,
                            Name = "Executive Assistant"
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 4,
                            IsActive = false,
                            Name = "Receptionist"
                        });
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1990, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            DesignationId = 1,
                            Email = "john@example.com",
                            EmployeeTypeId = 1,
                            FullName = "John Doe",
                            Gender = "Male",
                            HireDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "John123!",
                            Salary = 60000m
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1985, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            DesignationId = 5,
                            Email = "jane@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Jane Smith",
                            Gender = "Female",
                            HireDate = new DateTime(2018, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Jane123!",
                            Salary = 80000m
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1992, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            DesignationId = 7,
                            Email = "sam@example.com",
                            EmployeeTypeId = 3,
                            FullName = "Sam Wilson",
                            Gender = "Male",
                            HireDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Sam123!",
                            Salary = 50000m
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1995, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            DesignationId = 11,
                            Email = "anna@example.com",
                            EmployeeTypeId = 2,
                            FullName = "Anna Taylor",
                            Gender = "Female",
                            HireDate = new DateTime(2022, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Anna123!",
                            Salary = 40000m
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1989, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            DesignationId = 3,
                            Email = "tom@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Tom Brown",
                            Gender = "Male",
                            HireDate = new DateTime(2019, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Tom123!",
                            Salary = 70000m
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1987, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            DesignationId = 4,
                            Email = "emma@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Emma Davis",
                            Gender = "Female",
                            HireDate = new DateTime(2017, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Emma123!",
                            Salary = 75000m
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1990, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            DesignationId = 8,
                            Email = "luke@example.com",
                            EmployeeTypeId = 3,
                            FullName = "Luke Miller",
                            Gender = "Male",
                            HireDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Luke123!",
                            Salary = 85000m
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1993, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            DesignationId = 10,
                            Email = "olivia@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Olivia Johnson",
                            Gender = "Female",
                            HireDate = new DateTime(2021, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Olivia123!",
                            Salary = 65000m
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateTime(1997, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            DesignationId = 2,
                            Email = "mia@example.com",
                            EmployeeTypeId = 4,
                            FullName = "Mia Moore",
                            Gender = "Female",
                            HireDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Mia123!",
                            Salary = 30000m
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateTime(1986, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            DesignationId = 6,
                            Email = "chris@example.com",
                            EmployeeTypeId = 2,
                            FullName = "Chris Evans",
                            Gender = "Other",
                            HireDate = new DateTime(2018, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Chris123!",
                            Salary = 55000m
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateTime(1994, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            DesignationId = 7,
                            Email = "sophia@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Sophia White",
                            Gender = "Female",
                            HireDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Sophia123!",
                            Salary = 52000m
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateTime(1996, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            DesignationId = 12,
                            Email = "liam@example.com",
                            EmployeeTypeId = 2,
                            FullName = "Liam Green",
                            Gender = "Male",
                            HireDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Liam123!",
                            Salary = 38000m
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateTime(1991, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            DesignationId = 2,
                            Email = "noah@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Noah Black",
                            Gender = "Male",
                            HireDate = new DateTime(2018, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Noah123!",
                            Salary = 65000m
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateTime(1988, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            DesignationId = 4,
                            Email = "isabella@example.com",
                            EmployeeTypeId = 1,
                            FullName = "Isabella Blue",
                            Gender = "Female",
                            HireDate = new DateTime(2017, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "Isabella123!",
                            Salary = 76000m
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateTime(1993, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            DesignationId = 9,
                            Email = "james@example.com",
                            EmployeeTypeId = 3,
                            FullName = "James Brown",
                            Gender = "Male",
                            HireDate = new DateTime(2021, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "James123!",
                            Salary = 62000m
                        });
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = false,
                            Name = "Permanent"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            Name = "Temporary"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            Name = "Contract"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = false,
                            Name = "Intern"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.Designation", b =>
                {
                    b.HasOne("HumanCapitalManagementApp.Models.Department", "Department")
                        .WithMany("Designations")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.Employee", b =>
                {
                    b.HasOne("HumanCapitalManagementApp.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HumanCapitalManagementApp.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HumanCapitalManagementApp.Models.EmployeeType", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("EmployeeType");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.Department", b =>
                {
                    b.Navigation("Designations");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HumanCapitalManagementApp.Models.EmployeeType", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
